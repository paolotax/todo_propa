.well
  .map-baule
    - @mappa = @clienti.to_gmaps4rails
    = gmaps({ :markers => {:data => @mappa }, :map_options => { :type => "ROADMAP", :zoom => 15, :auto_zoom => true } }, false, false)
    
  = link_to "Svuota baule", baule_rimuovi_path, class: 'btn btn-warning baule-rimuovi'

.well
  .row              
    - unless @libri_nel_baule.empty?
      .well.span5
        %h2 Ordini nel baule
        %table.table.libri-nel-baule
          - for libro in @libri_nel_baule do
            %tr
              %td= libro[:titolo]
              %td
                .pull-right= libro[:quantita]

    - unless @adozioni_nel_baule.empty?
      .well.span5
        %h2 Adozioni nel baule
        %table.table.adozioni-nel-baule
          - for libro in @adozioni_nel_baule do
            %tr
              %td= libro[:titolo]
              %td
                .pull-right= libro[:quantita]

  %ol
    - for v in @visite do
      %li[v]
        %h2= v.cliente.titolo
      
        %table.table.table-bordered.classi-adozioni
          - v.cliente.classi_adozioni_grouped.each do |k, classi|
            %tr
              %td.classe-group
                .badge.badge-primary.pull-left= k
              - classi.each do |c|
                %td[c]
                  .pull-left
                    .badge.badge-info.sezione
                      =c[:sezione]
                  .clearfix  
                  - unless c.adozioni.scolastico.empty?
                    %ul.adozioni-list
                      - for a in c.adozioni.scolastico do
                        %li[a]
                          %span.label.label-important= a.libro.sigla
                    
          

        / .span5
        /   = render 'classi/classi', cliente: v.cliente
        / .span6
        /   = render 'adozioni/adozioni', cliente: v.cliente

      %ol
        - for a in v.appunti do
          %li= a.note
          %ul 
            - for r in a.righe do
              %li
                = r.libro.titolo
                = r.quantita
                = r.importo
