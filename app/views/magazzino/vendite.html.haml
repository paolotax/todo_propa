.row
  .content-main.span8
    .content-header
      .header-inner
        %h2 Situazione Vacanze

    .situazione-vacanze.list
      - @libri_vacanze.each do |libro|
        .item[libro]
          .titolo
            = link_to image_tag(libro.image_url(:small_thumb)), libro
            %strong= libro.titolo
            %br
            = libro.cm
          .quantita
            - da_consegnare = 0
            - if @da_consegnare.keys.include?(libro)
              - da_consegnare = @da_consegnare.values[@da_consegnare.keys.index(libro)].sum(&:quantita)
              = da_consegnare 
            - else
              &nbsp
        
          .righe
            - if @da_consegnare.keys.include?(libro)
              - for riga in @da_consegnare.values[@da_consegnare.keys.index(libro)] do
                = link_to riga.appunto, class: "label label-info", style: "display: block; float: left; margin-right: 3px; margin-bottom: 3px;" do
                  %strong= riga.quantita
                  = riga.appunto.cliente.titolo
            - else
              &nbsp

          .in_ordine
            - in_ordine = 0
            - if @in_ordine.keys.include?(libro)
              - in_ordine = @in_ordine.values[@in_ordine.keys.index(libro)].sum(&:quantita) 
              = in_ordine
            - else
              &nbsp
            - carichi = 0
            - if @carichi.keys.include?(libro)
              - carichi = @carichi.values[@carichi.keys.index(libro)].sum(&:quantita) 
              %span= carichi
            - else
              &nbsp
      
          .consegnati
            - consegnati = 0
            - if @consegnati.keys.include?(libro)
              - consegnati = @consegnati.values[@consegnati.keys.index(libro)].sum(&:quantita) 
              = consegnati
            - else
              &nbsp
    
          .giacenza
            = in_ordine + carichi - da_consegnare - consegnati
            %span
              = carichi - da_consegnare - consegnati
              
          .clearfix

  .side-bar.span4
    - riep_copie = current_user.righe.joins(:libro).scarico.di_questa_propaganda.sum("righe.quantita * libri.coefficente", group: "libri.settore")
    - riep_fatturato = current_user.righe.joins(:libro).scarico.di_questa_propaganda.sum("righe.quantita * righe.prezzo_unitario * (100 - righe.sconto) / 100", group: "libri.settore")
    - riep_carico = current_user.righe_fattura.joins(:libro).carico.di_questa_propaganda.sum("righe.quantita * righe.prezzo_unitario * (100 - righe.sconto) / 100", group: "libri.settore")
    .module
      %table.table
        %tr
          %th Settore
          %th Copie (bb)
          %th Venduto
          %th Acquisti
        - for k in riep_copie.keys
          %tr
            %td= k
            %td= riep_copie[k]
            %td= pretty_prezzo riep_fatturato[k].to_f
            %td= pretty_prezzo riep_carico[k].to_f
            
            
    - ids = current_user.righe.scarico.da_consegnare.di_questa_propaganda.pluck("appunti.cliente_id").uniq
    - grouped_clienti = Cliente.order(:id).find(ids).group_by(&:provincia)
    
    .clienti-list
      
      - grouped_clienti.each do |provincia, clienti|
        
        .map-avatar
          = gmaps({ :markers => {:data => clienti.to_gmaps4rails }, :map_options => { id: "map_#{provincia}", :type => "ROADMAP", :zoom => 15, :auto_zoom => true } }, false, false)
        
        = provincia
        %ol.clienti-list
          - for cliente in clienti do
            = render cliente
            
    .module
      %h2 Cassa
      %table.table
        %tr
          %th Data
          %th Incasso
        - for r in @cassa
          %tr
            %td= r[0]
            %td= number_to_currency r[1]
          
          
    
    
    
    
    
    

